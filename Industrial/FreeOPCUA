//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
OPC-UA
IOT Overview https://www.youtube.com/watch?v=QRBMVngtVhA
Gateways:
    Siemens IOT2040 Connecting to S71200: https://www.youtube.com/watch?v=buuvrdR0OX4
    Siemens IOT2050 Overview: https://www.youtube.com/watch?v=gEe8FVaR2Zo
    Siemens IOT2050 SD Card image: https://support.industry.siemens.com/cs/document/109780231/simatic-iot2050-sd-card-example-image?dti=0&lc=en-WW
More Python Programs: https://github.com/Izaat/references/tree/main/Python%20References

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
CONTENTS
01. Installation
02. Server
03. Client
04. RPi OPC Server
05. RPi OPC Client
06. Changing Server values from client & controlling LEDs
07. OPC-UA Server Security with Username and Password (Part 1)
08. OPC-UA Server Security with Username and Password (Part 2)
09. OPC-UA Server Security with Username and Password (Part 3)
10. Designing IOT Dashboard for OPCUA Client, Server

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
01. Installation

    Architecture
        Address Space >
            Node 1
                Var 1 (Temperature)
                Var 2 (Pressure)
                Var 3 (Time)
            Node 2
            Node 3

    Installation 
        FreeOPCUA
            https://github.com/FreeOpcUa/python-opcua
        Python 3.5 required
        Go to Python installation directory
        Enter 'scripts' folder
        C:\>Python3.5\Scripts>pip3 install freeopcua
        C:\>Python3.5\Scripts>pip3 install cryptography
        

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
02. Server

    Write a simple server code for OPC UA
    Create a new project in VSCode with Python 3.5
    Name this project "OPCUAServer"
    Under the project tree, create a new file and name this file "server.py"

    Server.py (Skeleton)
        from opcua import Server
        
        server = Server()
        url = "opc.tcp://192.168.0.8:4840"
        server.set_endpoint(url)
        
        name = "OPCUA_SIMULATION_SERVER"
        addspace = server.register_namespace(name)

        node = server.get_objects_node()                            //Assign root node
        
        Param = node.add_object(addspace, "Parameters")

        Temp = Param.add_variable(addspace, "Temperature", 0)  //Add variable, assign addspace, name it temperature, assign initial value of 0
        Press = Param.add_variable(addspace, "Pressure", 0)  //Add variable, assign addspace, name it pressure, assign initial value of 0
        Time = Param.add_variable(addspace, "Time", 0)  //Add variable, assign addspace, name it time, assign initial value of 0

        Temp.set_writable()                                  //Set variable as writable
        Press.set_writable()                                 //Set variable as writable
        Time.set_writable()                                  //Set variable as writable

        server.start()
        print("Server started at {}".format(url))


    Server.py (CODE)
        from opcua import Server
        from random import randint                           //Importing random to inject random values into while loop
        import datetime                                      //Importing time to inject current date and time into while loop
        import time                                          //Importing time for the time delay in while loop
        
        server = Server()
        url = "opc.tcp://192.168.0.8:4840"
        server.set_endpoint(url)
        
        name = "OPCUA_SIMULATION_SERVER"
        addspace = server.register_namespace(name)

        node = server.get_objects_node()        
        
        Param = node.add_object(addspace, "Parameters")

        Temp = Param.add_variable(addspace, "Temperature", 0)  
        Press = Param.add_variable(addspace, "Pressure", 0) 
        Time = Param.add_variable(addspace, "Time", 0) 

        Temp.set_writable()            
        Press.set_writable()                     
        Time.set_writable()                          

        server.start()
        print("Server started at {}".format(url))

        while True:                                             //Assigning random values to Temp, Press and Time
            Temperature = randint(10, 50)                       //Generates random value from 10 to 50
            Pressure = randint(200, 999)
            TIME = datetime.datetime.now()

            print(Temperature, Pressure, TIME)

            Temp.set_value(Temperature)
            Press.set_value(Pressure)
            Time.set_value(TIME)

            time.sleep(2)                                       //Delay for 2 seconds


    Display:
        12 906 2021-07-23 12:00:25.123465
        where 
            12 is temperature,
            906 is pressure
            and the reset is time
            Note: the values will keep on generating

    NOTE: For more simulation code, Google for "opc ua simulation server"


//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
03. Client

    Writing a client code to write into the server
    Using UAExpert to connect to server
        https://www.unified-automation.com/products/development-tools/uaexpert.html
    Download and install the free UAExpert software
    Once installed, run the server code from Topic 2
    Start UAExpert
    Create a new project folder and name this folder as "OPCUAClient"
    Create a new file and name this file as "client.py"
        ../OPCUAClient/client.py
        Note that ../OPCUAServer shares the same parent folder as ../OPCUAClient
    
    UAExpert Software
        In main toolbar, click on the "+" icon to add server
        Add server window will appear
            Open "Advanced" tab
            Server Information section
                Endpoint Url: opc.tcp://192.168.0.8:4840
        In Project Panel (Left hand side panel)
            Project > Servers > Empty server >
                Right click > Click on "Connect"
                A folder tree will appear in the Address Space Panel 
        Address Space
            Root > Objects > Parameters >
                Pressure
                Temperature
                Time
            Drag and drop all the 3 subtrees (Pressure, Temperature, Time) into the Main viewport "Data Access View" tab
            Take note of the Node IDs for the 3 variables
                Pressure: NS2 |Numeric| 3
                Temperature: NS2 |Numeric| 2
                Time: NS2 |Numeric| 4

    client.py
        from opcua import Client
        import time
        
        url = "opc.tcp://192.168.0.8:4840"        
        client = Client(url)
        client.connect()
        print("Client connected")
        
        while True:
            Temp = client.get_node("ns=2;i=2")
            Temperature = Temp.get_value()
            print(Temperature)

            Press = client.get_node("ns=2;i=3")
            Pressure = Press.get_value()
            print(Pressure)

            TIME = client.get_node("ns=2;i=4")
            TIME_Value = TIME.get_value()
            print(TIME_Value)

            time.sleep(1)

    Run client.py and compare with server.py
    Both values on server.py and client.py should be in sync


//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
04. RPi OPC Server



























