//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
Labview
http://www.halvorsen.blog/documents/programming/labview/labview.php
https://www.usn.no/english/about/contact-us/employees/hans-petter-halvorsen
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
CONTENTS
01. Introduction
02. While Loops
03. Plotting
04. SubVIs
05. Case Structures
06. Formula Node
07. Arrays
08. Clusters
09. Property Nodes
10. Project Explorer
11. Debugging
12. Labview and USB6008
13. Labview and OPC UA

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
01. Introduction

    Starting
        Splash screen > File > New VI
        2 split screen Windows will open (Front panel + Block Diagram)

    Right Click on Front Panel
        Controls Selection Panel:
            Silver > Numeric, Boolean, String&Path, Arrays/Matrix, List/Tables, Graph, Ring&Enum, Decor, IO
            Modern, System, Classic, Express, Control/Simulation, .NET/ActiveX,
            SignalProcessing, Addons, UserControls,
            DSCModule, Vision

    Select Numeric Control and Paste in Front Panel
        Right Click > Numeric > Numeric
        A diagram will appear in Bloack Diagram Panel

    Right Click on Block Diagram    
        Functions Selection Panel:
            Programming > Structures, Array, Cluster, Numeric, Boolean, String, Comparison, Timing, Dialog, FileIO, Waveform, Apps, Sync, Graphics, Report
            Control/Sim, MeasurementIO, DataComms, Maths, Instruments, Vision/Motion, 
            SignalProcessing, Connectivity, Express, Addons, Favorites, UserLibs,
            DESCModules, FPGAInterface, RealTime, SQL
    
    Run the program
        Front Panel > Main Toolbar > Click on 'Run' (Arrow Icon)

    Program (without loops):
        Add in 2 Numerical Control display in Front Panel
        Add in 'Addition Operator' in Blcok Diagram Panel
            Reight Click in Block Diagram > Mathematics > Numeric > Add
        Add in Numeric Indicator in Block Front Panel
        Link everything up in BD Panel
        Click on Run in Front Panel
        Input numbers in Front Panel
        Click on Run in Block Diagram
        Calculated value will appear in Indicator
        NOTE: 
            Whenever the input changes, clicking on the Run button again is required
            Therefore, While loop needed to solve the problem
        
    Toggling between Panels
        CTRL+E

    Program (with loops):
        Cont'd
        Add while Loop
            In BD panel > Right Click > Programming > Structures > While Loop
            Draw 'While Loop' around the diagram
        Add Button to stop the program
            In Front Panel > Right Click > Silver > Boolean > Stop Button
        In Block Diagram, link Stop Button Block to the While Loop condition
        In Front Panel, Click on Run button
            Change the input parameter and the calculated value will appear in the indicator automatically
        NOTE:
            While loops are computer processing intensive since it's updating continuously
            To solve, add Timer function into the While Loop box in BD Panel
        Add Timer    
            In BD panel > Right Click > Programming > Timing > Wait(ms)
            Right Click on Input > Create > Constant
            Add "100" ms to the timer (This will update the while loop every 100 ms)

    Plotting Graph:
        Cont'd
        Add Waveform Chart
            Front Panel > Silver > Graph > Waveform Chart
            Block Diagram:
                Move Waveform Chart block into the while loop box
                Link Waveform Chart with the Add function's output
        Run and change the input parameters in Front Panel
        Notice that the Chart will plot continuously plotting the answers as the imput parameters changes


//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
02. While Loops

    Types of Loops and Structures
        While Loops (Solid line border)
        For Loops (Pages border)
        If-Else (Case Structure) - (Border with pattern)
            Nodes can be linked to the border 
            The border nodes can be connected to another area
        Sequence Structure (Film border)

    While Loop Example
        Voltage input (0-5V) from DAQ
        Converts voltage signal (Multiply by 4) to output water level height in tank
        Therefore, 25V = 100cm
        Front Panel
            Voltage
            Tank Level
            Stop while loop button
        Block Diagram   
            Voltage nodes
            multiplication node
            Tank level in cm node
            Timer node (ms)
            Stopbutton
            
        **Similar to Topic 1**
        NOTE: Just change the max Voltage input property to 25 and max output water level to 100

        Adding Numeric indicator to While Loop's Loop Iteration
            In front panel, 
                Right click > Silver > Numeric > Numeric Indicator
            In Block Diagram
                Link Numeric Indicator node to the While Loop's "i" box 
            This will show how many iterations the While Loop ran
            The Numeric indicator node can also be linked to a mathematics operator node for calculation

        While Loop border
            Connections inside the while loop can also be extended outside the while loop border
            Extend the output of the mathematics operator to the border
            A square connection node will appear (Loop Tunnel)
            An external node can be connected to the border node (Loop Tunnel)
            Add in Numeric Control block (This wont show any value when the loop is running, will show the value when the loop is stopped)
            
        Loop Tunnel
            Types of Tunnel Mode
                Last value
                Indexing
                Concatenate
            2 Ways to add external nodes
                - Normal Right click on panel and add
                - Select the Loop Tunnel > Right Click > Create >
                    Constant
                    Control
                    Indicator
            Indexing + Indicator = Array Indicator
            Array indicator
                In Front Panel, the indicator can be extended when dragged down to open up more arrays of indicators
            
        Shift Register
            Click on the While loop border and click on "Add shift register"
            Two arrow icons will appear on both sides of the border
            Arrow up icon - Output value
            Arrow down icon - Previous value
            Example
                Add in "Add Operator node" in between the the tank and multiplication node
                Link Arrow down shift reg to Add operator node
                Link Multiplication node output to Add operator node
                Extend Multiplication node output to Arrow up shift register
                Link Add operator node output to tank level indicator


//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
03. Plotting
    
    Example
        Simulate the temperature in Air Heater system. 
        The temperature in the air heater should be between 20 and 50 degree Celsius
        Use Random Generator for this Example
    Front Panel
        Waveform chart
        Low temp limit
        Upper temp limit
        Thermometer
        Stop
    Block Diagram Panel (While loop)
        Random number (0-1)
        Upper Temp Limit (UTL)
        Lower Temp Limit (LTL)
        Subtract Node (UTL - LTL)
        Multiply Node (Rand * Substract)
        Addition Node(Multiply + LTL)
        Waveform Chart (Add)
        Thermometer (Add)
        Timer (Wait - ms) - 1000ms
        Stop Button

    Features of Waveform Chart
        Renaming
            Double Click on Vertical/Horizontal axis title
            Title "Plot 0" can be changed by double clicking
        Plotting timing syncing
            The plotting of graph is totally different from the while loop timing
            To readjust plot sampling time to sync with the block diagram time, readjust the multiplier
            Right click > Scales Tab > Scaling factors > Multiplier       
            Example: 
                While loop wait time (ms): 2000ms
                Therefore, Plot multiplier: 2
        Right Click on title bar' title
            Visible Items
                Index Display
                Vertical Scrollbar
                Plot visibility checkbox
            Properties
        Right Click on title bar's icon
            Plot Visible
            Common Plots (Commonly used types of graph)
            Graph's line styling
                Color (Color of graph), Line Style (Style of graph), Line Width (Line thickness), Anti Aliased
            Graph Type Selection
                Bar Plots, Fill Base Line, Point Style, X/Y Scale
        NOTE: X=Horizontal, Y=Vertical
        Clear Chart
            Right Click > Data operation > Clear chart
        Historical Logs
            Block Diagram Panel > Right Click on Waveform Chart Node > Create > Property Node > History Data
                Place the node outside while loop border
                Right Click on History Node and select "Change All to write"
                Right Click on Input > Create > Constant = 0
                Link the History Data Node output to the While Loop border
            This will enables you to store data

    Sampling rate Timer
        Front Panel
            Numeric Control
        Block Diagram
            Numeric Control Node (Placed outside while loop) - Linked to while loop border
            Multiplier (While loop border, Constant), where the constant is 1000 since Timer is in ms and Numeric Control is in sec
            Timer - Wait (ms)
        Note: 
            Remember to change the waveform chart's multiplier for every changes made
            In order to automate the process, use the Historical Log Node
        Block Diagram
            Right Click on Waveform Chart Node > Create > Property Node > History Data
            Place the node outside while loop border
            Right Click on History Node and select "Change All to write"
            Right Click on Input > Create > Constant = 0
            Link the History Data Node output to the While Loop border
            Drag down the box to extend the array ("History")
            Right Click > Select Property > X Scale > Offset and Multiplier > Multiplier
            Link the multiplier's input to the Sampling rate timer node's  output

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
04. SubVIs

    SubVIs are the same as a function or a method used in other langugaes
    Hundreds or thousands of SubVIs are included with Labview
    SubVIs can be customized and created to your own needs
    SubVIs can be reused in other programs that uses the same operation
    Can also be used repeatedly in the same program
    Maintaining and debugging programs with SubVIs are much easier
    SubVI icons are located at the top right hand corner of Front Panel and Block Diagram Panel
    SubVIs can also appear in the form of nodes in Block Diagram Panel and be linked to other nodes


    Create Celsius to Fahrenheit converter SubVI
        Equation: T(F) = 9/5 T(C) + 32    
        Front Panel
            Add Numeric Control
            Add Numeric Indicator
        Block Diagram Panel
            Numeric Control Node
            Add Division node (Constants [9, 5])
            Add Multiply node (NumericControl, Division)
            Add Addition node (Multiply, Constant[32])
            Numeric Indicator Node (Addition)

    Converting the program into SubVI
        In front panel, at the top right hand corner, right click on the grid icon
        Select 'pattern' and choose the one with one single vertical line in the center of square
        This represents one input and one output
        The left side of the square means input. 
        The right side of the square means output
        Left click on the left side of the SubVI square and then click the numeric control to link the 2 entities
        Left click on the right side of the SubVI square and then click the numeric indicator to link the 2 entities
        Both the section of the square should turn out green which means they are connected
        Next to the pattern selection, double click on the icon image to open the property window
        This enables you to change the icon image, texts, titles or any other SubVI properties
        NOTE: In Icon Text Tab, note that the image on the right is actually a paintbrush. Cropping, drawing, adding texts can be done here
        Once complete, the new image will appear as the new icon
        Save as ConvertToFahr.vi

    Using the new SubVI
        Create a new VI
        Front Panel
            Add Vertical Fill Slide (Name this Celsius)
            Add Dial Gauge (From Numeric silver) - Name this Fahrenheit
        Block Diagram
            Right click > Select VI > Browse through the folder where ConvertToFahr.vi was stored
            Link the SubVI input to Control and SubVI output to indicator
        Double click on the SubVI to open its own front panel, CTRL+E to open the block diagram
        NOTE:
            Add while loop to the main block diagram, NOT the SubVI's block diagram
            The SubVI can also be duplicated as many times as you like according to the application
            But in order to reuse the subvi, make sure to change the memory to preallocated memory
            In SubVI Front Panel > Right Click on SubVI icon > VI Properties > Category: Execution > Reentrancy Section >
                1. Non-reentrant execution - Only one of the duplicated node can run and shares data across all duplicated nodes
                2. Shared clone reentrant execution - Sharing the memory between the duplicated SubVIs (Output will be first come first serve)
                3. Preallocated clone reentrant execution - All duplicated nodes are different from each other
            Usually select number 3 for duplicated nodes of different entity


//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
05. Case Structures

    Case Structures work like If..Else statements
    The box can be set as True/False
    Case structures are good for generating Error messages or multiple program selection
    
    Simple Case Structure (True/False) - Two cases
        Add Case Structure
            Right click in Block Diagram Panel > Programming > Structures > Case Structure
            Set as False
            On left hand side of the border, there is a connector that can be connected to external nodes
                Right click > Create Constant 
                The constant can be toggled between True/False
                Set as False
        Add Dialog    
            Right Click > Programming > Dialog Interface > One Btn Dialog
            Place this in the Case Structure box
            Dialog node Input:
                Right click > Create > Constant
                Add in "This is False"
        Change Case Structure box to True
            Add in another dialog node and set constant as "This is True"
        Optional:
            Add while loop to surround the Case structure
            Add stop button to stop while loop
            Add Wait timer and set constant to 5000ms (5sec)
        Run Program
        Explanation
            When the Input constant is True, "This is True" will pop up
            When the Input constant is False, "This is False" will pop up
        You can also add in a latching button in place of the input constant
            If button is pressed, then true. If button is off, then false
            
        Instead of using a latching button or constants to control the case structure, use numeric control instead
            Set this numeric contol data type to integer 
            Right click on node > Representation > I32
            Note that the case structure now can be toggled between 0 and 1 instead of True and False
            This can also be used for multiple case structures
            
    Case Structure with multiple cases
        Use Numeric control to toggle between multiple case structures
        Continued from the Simple Case structure above, right click on the case structure border
            Add "Case After" or "Case Before" 
        NOTE: 
            If the value of the Numeric Control doesn't cover the available case structure (ie 0,1,2), Case Structure will revert to its default (0)
            To set other pages as the default, change to the target page, right click and select "Make this the default case"
        You can also use an Enumerator to control the case structure via string instead of using the Numeric Control
            Right Click in Front Panel > Silver > Ring&Enum > Enum
            Enter a text in the input box
            To add another input, Right click > Add Item After > Add another text
            Create multiple options
            When clicked, a dropdown menu list will appear
            In Block diagram, replace numerical control with the enumerator
            Notice that in the case structure box, the name changes from integers to texts based on the enumerator
            
    Looping cases
        Create Case structure
        Create while loop around the case structure
        Add Shift register  for while loop border
            Link to the Case structure control node [?]
        Add string constant and link to while loop's shift register
            Right click > Programming > String > String constant
            Name this to 'start'
        Add stop button for while loop
        Add Wait timer for while loop and set constant to 2 sec
        Case 'Start' (Set as the default)
            Add dialog box and add constant as 'Start'
            Add String constant and name this to 'Next'
            Link string constant to right side of case structure border
            Link case structure border to right side of shift register
        Case 'Next'
            Add dialog box and add constant as 'Next'
            Add String constant and name this to 'Start'
            Link string constant to right side of case structure border
            Link case structure border to right side of shift register
        Run program
            This will toggle between start and next whenever the button is pressed

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
06. Formula Node
    
    Use C language in Labview
    Useful for mathematical expressions and simulations in implementing discrete equations
    Refer to Topic 4 for Celsius to Fahrenheit converter
    For Formula node, the formula can just be input as Formula Node

    Simple VI using formula node
        Equation: Tf = (9/5)Tc + 32    
        Front Panel
            Numeric Control (Rename as "Tc")
            Numeric Indicator (Rename as "Tf")
        Block Diagram Panel
            Formula node
                Right click > Structures > Formula Node
                Right click on left border > Add input
                    Type the name "Tc"
                Right click on right border > Add output
                    Type the name "Tf"
            Link up Numeric Control (Tc) to Tc connector
            Link up Numeric Indicator (Tf) to Tf connector
            Add formula into Formula Node
                Tf = (Tc*9)/5 + 32;
        Run program from the Front Panel
            0C = 32F
            25C = 77F

    Simple VIs using Advanced formula node
        Equation: f(x) = [(ln(ax^2+bx+c)) - (sin(ax^2 +bx +c))] / ((4*3.142*x^2) + cos(x-2)(ax^2+bx+c))
        Given, 
            a = 1
            b = 3,
            c = 5
        Find f(9) //Answer should be 0.0044

        Front Panel
            Numerical Controls (a, b, c, x)
            Numerical Indicator (f)
        Block Diagram
            Add Formula Node
                Formula: 
                    f = (ln(a*x*x + b*x + c) - sin(a*x*x + b*x + c)) / (4*pi*x*x + cos(x-2) * (a*x*x + b*x + c));
            All Numerical controls (a, b, c, x) linked to Formula Node left border
            Numerical Indicator (f) linked to right border

    Alternative Solution
        Front Panel
            Numerical Controls (a, b, c, x)
            Numerical Indicator (f)
        Block Diagram
            Add Formula Node
                Formula: 
                    g = a*x*x + b*x +c;
                    f = (ln(g) - sin(g)) / (4*pi*x*x + cos(x-2) * (g));
            All Numerical controls (a, b, c, x) linked to Formula Node left border
            Numerical Indicator (f) linked to right border

    LabView MathScript Node and LabView MATLAB Node
        They use MATLAB Syntax
        More powerful features regarding Arrays, Vectors and Matrices
        MathScript:
            Need to have LabView MathScript RT Module Installed
            An add-on to LabView and it includes a lighter version of MATLAB
        MATLAB Script Node:
            Need to have MATLAB Installed to your computer
            Works only with Windows

    Simple VIs using MathScript Node
        Block Diagram
            Add MathScript Node
                Right Click > Programming > Structures > MathScript
                Borders share the same functions as Formula Node (Left Border for Input, Right Border for Output)
            MathScript Code
                x=0:10;
                y=3*x+2;
                plot(x,y)
            Run program and a linear graph will appear

    Simple VIs using MATLAB Node
        Block Diagram
            Add MATLAB Node
                Right Click > Mathematics > Script & Formula > Script Node > MATLAB Script
                Borders share the same functions as Formula Node (Left Border for Input, Right Border for Output)
            MATLAB Script
                x=0:10;
                y=3*x+2;
                plot(x,y)
            Run program and MATLAB software will start to open the plot graph


//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
07. Arrays

    Front Panel
        Add Array Node
            Right click > Silver > Array, Matrix, Clusters > Array
        Define Data Type for Array
            Add Numeric Control 
            Drag and Drop into the empty array box
        Create Array
            Drag the Array box downwards 
            This will automatically duplicate the Numeric Control as Array elements
            Key in the values and the data will be stored even when the array box is minimized
            Note that the transparent array represents unused elements
        Explanation
            The Left Input box represents Index Number
            The Right Input box represents Stored Value
        Data Types
            Integer: Right click > Silver > Array, Matrix, Clusters > Array
            String: Right click > Silver > String, Path > String Control
            Boolean: Right click > Silver > Boolean > Push Button

    Finding the average value of elements in the array
        Front Panel
            Add Array Node
            Add Numeric Control to Array Node
            Key in Multiple values into the Array
        Block Diagram Panel
            Add Mean Node
                Right Click > Mathematics > Probability/Statistics > Mean
                Link Output of Array Node to Input of Mean Node
            Add indicator
                Right click on output of mean node > Create > Indicator
        Run program and the Mean value will show in the indicator

    Mathematical operators
        Front Panel
            Add Array Node
            Add Numeric Control to Array Node
            Key in Multiple values into the Array
            Duplicate the Array Node
        Block Diagram Panel
            Add mathematical operator
                Right Click > Mathematics > Numeric > Add
            Add Indicator
                Right click on Add Operator > Create > Indicator
        Run program

    2D Array
        Front Panel
            Instead of extending the element box, extend the index box downwards
            Extend the element box horizontally to show the elements of both dimensions
        Block Diagram
            Add Array Size 
                Right Click > Programming > Array > Array Size
                Link the input of Array Size with the output of Array
            Add Indicator
                Right Click on output of Array Size > Create > Indicator
        Run program
        Answer: 
            (Row by
            Column)
            
    Also Try:
        Index Array: Output the value of selected array to indicator (Using constant as the indexer for the input) - Single array
        Delete Array: Output a new array after deleting to indicator (Using index number as constant for input to select the array to be deleted) - Single Array
        Build Array (Combine): Output a combined array to indicator (The node can be extended downwards to add more inputs for multiple arrays) - For 2 separate 1D arrays
            Example: (15,1) + (3,1) = (15,2)
        Transpose 2D Array: With Build Array setup, extend the input of Build Array Node to the input of Transposed Array Node - For 2 separate 1D arrays
            This generally switches horizontal array to vertical and vice versa
            Example: (15,1) => (1, 15)
        Build Array (Concatenate): Right click and select "Concatenate" option. This will form a single array from 2 separate ones. 
            Example: (15,1) + (3,1) = (17,1)
        Search 1D Array: For String Arrays. This searches and count the matches in the entire array. Constant input will be the target. Output will be number of matches.

    Using Array with For Loops
        Front Panel
            Add 1D Array of random numbers
        Block Diagram
            Add For Loop box
            With Array node outside For Loop box, Link Array output to Left Border
            Add Indicator inside the Loop box and link indicator input to left border
            Add timer with 2000ms
        Run Program 
            The indicator will run though array and show its values every 2 seconds
        Also Try:
            Adding math operators into the for loop to calculate individual array values and then output answers to indicator
            OR
            With the Math operator, link the output to right border and then right click on connection node to create external array indicator
                Remove the timer and Extend the array box to show all the elements
                Run program and this will store the calculated values as another array

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
08. Clusters

    A grouped data elements of mixed types, and handy to use when you want to structure a data into a manageable package
    Similar to "struct", "record" and "miniature" class in other programming languages
    
    Front Panel > Right Click > Modern > Array/Matrix/Cluster > Cluster
        Numeric Control, Strings and Boolean can be added
    Block Diagram Panel > Right Click > Programming > Cluster/Class/Variant > 
        Example: Manipulating a data that consist of Name (String), Age (Integer), Employed (Boolean) and Company Name (String)        
        Unbundle by name                           //Separating every Strings, Boolean, Integers from the data
        Bundle by name                               //Opposite of Unbundle by name
        Unbundle                                          //Same functionality as Unbundle by Name except that the Node shows the data types instead of Names
        Bundle                                              //Same functionality as Bundle by Name
        BundleCluster constant
        Build Cluster Array
        Index & Bundle cluster Array
        Cluster to Array
        Array to Cluster
        Error In                                          //Similar to Bundle Cluster into Array but for errors,  when activated will show the error number and message
        Error Out                                       //Similar to Bundle Cluster into Array but for errors,  when activated will show the error number and message

    Unbundle by Name/Unbundle
        Front Panel
            Add Cluster (Name as Books)
                Right Click > Silver > Array/Matrix/Cluster > Cluster
            Add String Control into Cluster Box (Name as Title)
            Add String Control into Cluster Box (Name as Author)
            Add Numerical Control into Cluster Box (Name as Year)
            Add Boolean button (Name as Sale)
            Add a book name to the inputs
            To reorder the inputs, right click on the box and select "Reorder Controls"
                Black box = New order, White box = Current order
                This changes the order of the node in Block Diagram
        Block Diagram
            Add Unbundle by Name
                Right Click > Programming > Cluster/Class/Variant > Unbundle by Name
                Link input to the output of Books Node
                Drag the Unbundle by Name Node to extend the output
                Title, Author, Year and Sale will be shown
            Add indicator
                Right click on any of the 4 output > Create > Indicator
        Run Program and the answer will be shown in the front panel
            Title: "Title of the book" 

    Bundle by Name/Bundle
        Continued from Unbundle by Name
        This is similar to Unbundle
        The input will be the individual control nodes and the output indicator will be the cluster node
        Block Diagram Panel
            To show the input title, right click on Cluster input node (From Front Panel) and create a constant
            Place the constant into the Bundle by Name node (This will show the input names) - Make sure the String, Boolean and Integer are within the blue box
            Right click on the Cluster input node again and change this into indicator and link input to the output of Bundle by Name node
            Change the indicators into control and link the output to the input of the Bundle by Name node
            
    Bundle Cluster into Array
        Continued from Unbundle by Name
        Front Panel
            Add Array
            Drag and Drop entire Cluster box into the Array box
            Now you will have an array of books by titles, author, year and sale
        Block Diagram   
            Create a For Loop
            With the Array outside the For Loop, link the output to the left border of For Loop
            Add Unbundle by Name into the For Loop and link input to the left border (Array connection)
            Move all indicators into the For Loop
            Link indicators input to the output of the Unbundle by Name
            Add Timer (Wait) to the For Loop (Set to 2 seconds)
        Run Program
            The output will scroll through all the books in the array every 2 seconds

    Error In / Error Out
        Front Panel
            Add in Error In and Error Out
                Right Click > Silver > Array/Matrix/Cluster > Error In
                Right Click > Silver > Array/Matrix/Cluster > Error Out
                Note: Right click on Error in Node in BDPanel, link to Unbundle by Name and add Indicator, this will show the status
        Block Diagram Panel
            Add Open File IO
                Right Click > File IO > Open/Create/Replace File
                Right Click > File IO > Close File
                Right Click > File IO > Read Text File
                Link OpenFile Error Output to ReadFile Error Input
                Link ReadFile Error Output to CloseFile Error Input
                Link Output of Error In Node to OpenFile Error Input
                Link Input of Error Out to CloseFile Error Output
            Add Case Structure
                Link Output of CloseFile to the left border of Case Structure
                Notice the Error and No Error header
            Add One Btn Dialog
                Right Click > Dialog Interface > One Btn Dialog
                Place the node into Case Structure node
                Add Text constant
                If there is error in closing a file, a popup box will appear
                
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
09. Property Nodes

    Properties can be set from the configuration window or set them with a code
    Typical properties are Title, Text, Value, Fonts, etc
    In LabView, properties can be set via a property window to configure the selected control/object
    
    Method
        Property Window
            Right click on an object and select "Properties"
            Property Window will appear
        Property Nodes
            Right click on an object > Create > Property Node > Select from the list
            This enables to set properties with a code
            Note: Each object has its own set of list to choose from

    Property Node List
        Class ID, Class Name, Owner, Owning VI
        Bounds, Position        
        Blinking, Mouse Wheel Support, Caption, Control Index, Data Binding, Data Socket, Description, Disabled
        Focus Key Binding, Indicator, Key Focus, Label, Owning Pane, Skip when Tabbing, Synchronous Display
        Tip Strip, Value, Value (Signalling), Visible, XControl        
        Data Entry Limits, Decrement Key Binding, Increment Key Binding, Response to Outside Limit Values, Unit Label
        Display Format, Format String, Increment/Decrement Visible, Numeric Text, Radix Visible, Text Width
        
    Disable a Numeric Control
        via Property Window (Front Panel)
            Add a Numeric Control
            Right Click on Numeric Control > Properties
            Appearance Tab > Enabled State: Disabled
            Run program and Numeric Control can't be selected
        via Property Node (Block Diagram)
            Right click on an object > Create > Property Node > Select "Disabled"
            Right Click on the Node and select "Change All To Write"
            Right click on input > Create > Constant
                Select Disabled and Grey
            Run program and Numeric Control can't be selected

    Application on Waveform Chart 1
        Clear data whenever chart stops
        Block Diagram Panel
            Right Click on Waveform Chart Node > Create > Property Node > History Data
            Right Click on the Node and select "Change All To Write"
            Right click on input > Create > Constant: 0
            No need to link to other nodes
            NOTE: If the chart node is inside a loop box, then place property node outside the loop box
            Run program
                Graph clears when restarting thte chart
        This method helps you from manually clearing the graph before starting the chart

    Application on Waveform Chart 2
        Auto Sampling Time Multiplier (Refer to Topic 3 Sampling Time)
        Block Diagram Panel
            Right Click on Waveform Chart Node > Create > Property Node > XScale > Multiplier
            Right Click on the Node and select "Change All To Write"
            Link input of the Multiplier Node to the output of the Sampling Time Node
            NOTE: The Multiplier Node should be outside the loop
            Run program
                Sampling Time can be edited from the Front Panel without the need to change the Waveform Chart's multiplier


//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
10. Project Explorer

    Similar File Explorer Tree
    Helps to easily visualize multiple VIs and Files
    Use when creating executables, web services, embedded application, etc
    
    To use this feature, create a new project instead of creating a VI
    The project will be saved as a file with *.lvproj extension
    The project file can consist of multiple VIs
    Tree structure:
        Lvproj >
            My Computer >
                Virtual Folders (This folder can also contain VI files)
                *.vi (This file can be saved anywhere in the disk)
                Dependencies
                Build Specifications (Creates a file)
                    Application (EXE) - Suitable to deploy to other computers without LabView
                    Installer
                    .NET Interop Assembly
                    Library
                    Shared Library (DLL)
                    Source Distribution
                    Zip Files

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
11. Debugging

    LabView Debug Techniques:
        Broken Run Arrow: An icon in place of Run Arrow button. 
            In main toolbar, click on broken arrow icon to open Error window. 
            Double click on error messages to view details
        Highlight Execution: See the flow and values while the code is running. 
            In main toolbar, click on the "Lightbulb Icon"
        Probes: See values from the node links. 
            In Block Diagram, Right click on any node links and select "Probe". 
            Probe Watch Window will appear. Add as many probe as needed by right clicking on another node link and select probe again
        Breakpoints: Breaking down conditions/program into smaller sections.  
            In Block Diagram, Right click on any node links and select "Breakpoint". 
            The breakpoints are shown as red circles 
            When the breakpoints are set, when ever the program starts, it will stop at these breakpoints
            Open Tools Palette:
                View > Tools Palette
            Breakpoints can be used together with Probe
            Breakpoint manager shows the list of all breakpoints
                Solid Circle: Enable
                Hollow Circle: Disable
                Cross: Delete
            Step Over to go to next breakpoints
            

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
12. Labview and USB6008
    
    USB6008 Analog In/Out
    Datalogging
    
    Connect USB-6008 to the PC directly via USB (NI-DAQmx driver must be installed to be recognized as a device)
    Check the connection
        Open Measurement and Automation Explorer (NI MAX)
        NI USB-6008 "Dev 1" will appear under Devices and Interface Tree
        Click on NI USB-6008 "Dev 1" and in Toolbar Menu, click on Self-test
            "The self test completed successfully" message will appear
        In Toolbar Menu, click on Test Panels
            Click start to see if everything is running as expected
            
    Create New VI Project (Analog Input)
        Block Diagram Panel
            Add While Loop to wrap up all 4 Nodes below
                Add Numeric Indicator
                Add Stop Button
                Add Timer with constant of 100
                Add DAQ
                    Right Click > Measurement > NI-DAQmx > DAQ Assist
                        Read Values => Acquire Signals
                        Output a Value => Generate Signals
                    Select Acquire Signals > Analog Input > Voltage
                        Note that there are 8 input channels for analog signals
                        Choose any one and click Finish
                    DAQ Assistant Window
                        Timing Settings
                            Acquisition Mode: 1 Sample (On demand)
                        Signal Input Range: 
                            Max: 5
                            Min: 0
                            Meaning, 0-5Vdc
                        Click OK
                Link DAQ "Data" Output to Indicator Input
            Run Program    
            
    DAQ Assistant Window  (For Input signal)
        To search for DAQ functions
        Right click > Search (Top right hand corner of toolbar)
        Search and click on Convert from Dynamic Data, a configuration window will appear
        In Conversion Section > Resulting Array Type > 
            Select Single Scalar
            Scalar Data Type: Floating point
            Channel: 0 
            Press OK
        Link DAQ "Data" Output to "Convert from Dynamic Data" node's input
        Link DAQ "Convert from Dynamic Data"  output to Numeric Indicator input
        Run Program

    DAQ Assistant Window  (For Output signal)
        Similar to Input signal above
        The only difference is that us "Generate Signals" instead of "Acquire"
        And, Add Numeric Control instead of Numeric Indicator
        Link Output of Numeric Control to the input of DAQ Assistant node (input)
        Run program and input 3 to Numeric control. Check with multimeter to verify the signal volltage

    For loop back test
        Add Numeric Indicator to the while loop
        Connect DAQ output to DAQ input (Loop Back Test)
        Connect both Analog Out Project and Analog In Project
        Run both programs at the same time
            If you enter "3" into Front Panel, the Indicator will show the voltage value in Numeric  Indicator

    For having 2 seperate VIs to single Visible
        Follow Input Signal program reference
        Add convert to Dynamic Data
        Link "Numerical Control" output to the input of "Convert to Dynamic Data" node
        Link output of "Convert to Dynamic Data" node to input of DAQ Assistant Data
        NOTE: The opposite should be applied (Convert from Dynamix Data)
        Run Program 
            Key in value to Numerical Control and the real value will appear in Indicator


//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
13. Labview and OPC UA

    Requirements
        Labview 2017 onwards
        Labview OPCUA Toolkit
            OPCUA Toolkit is a standalone product from 2017 onwards
            Version below 2017 contains OPCUA API (DSC+RealTime)
            From 2017 onwards, DSC and RealTime no longer contain OPCUA API

    Structure
        |                 OPC UA Server (Data Storage)
        |                             |
        |          |------------------|-----------------------|
        |          |                                          |
        |          ^  write                             read  V
        |          |                                          |
        |    OPC UA Client                              OPC UA Client
        |          |                                          |
        |     Measurement                          Monitoring & Analysis
        |
        
    Standards
        Classic - COM/DCOM
            Realtime data: OPC DA
            Historical Data: OPC HDA
            Alarm and Event: OPC AE
            etc
            Windows based systems only
        Next Gen (2017 and later) - XML, HTTP, SOAP
            Unified Architecture: OPC UA - All in one
            Works with any OS (Windows, Linux, OSX, etc)
            Protocols: UA Binary, UA XML

    OPC UA Toolkit
        Right Click on Block Diagram > Data Communication > OPC UA >
            OPC UA Client
                Connect, Forward Browse, Create Subscription, Delete Subscription, Disconnect, Add Monitored Data Nodes,
                Get Node Attr, Multiple Read, Multiple Write, Delete Monitored, Alarms Conditions, Historical Access
            OPC UA Server
                Create, Close, Start, Stop, Add Clients, Clear Clients, Register Server, Unregister Server, 
                Add Folder, Add Item, Add Analog Item, Add Property, Delete Node, Read, Write, 
                Alarms and Conditions, Historical Access
            Create Certificate

    Server.vi
        Block Diagram
            Create.vi > Add Folder.vi > Add Item.vi > Start.vi > While Loop > Stop.vi > Close.vi > Simple Error Handler.vi
                Top wire links (refnum) will go through from Create.vi and all the way through to Close.vi
                Bottom wire links (error) will go through from Create.vi and all the way through to Simple Error Handler.vi
                Note that top (refnum) and bottom (error) wire links will go through the while loop (left border and right border will be connected to the 2 wires)
                Simple Error Handler    
                    Right Click > Dialog & User > Simple Error Handler
                Center ouput of Add Folder.vi will be linked to the center input of Add Item.vi
            While Loop
                Add Wait Timer with constant of 1000
                Add Stop Button
            Server Endpoint URL
                Right Click on Create.vi node (center output) > Create > Indicator
                The input of this node with be linked to the center output of Create.vi
            Item Node ID
                Right Click on Add Item.vi node (center output) > Create > Indicator
                The input of this node with be linked to the center output of Add Item.vi
            ItemBox
                Right Click on Add Item.vi node (center input) > Create > Constant
                The output of ItemBox will be linked to the center input of Add item.vi
                Items: - Enable the internal labels
                    Name
                        Temperature
                    DataType
                        Double
                    Access level
                        read/write
                    Description
                        TC-01 Thermocouple Values
            Folder Name
                Right Click on Add Folder.vi node (center input) > Create > Constant
                The output of this node will be linked to the center input of Add Folder.vi
                Constant = "Process Data"
                Right click to enable label
        Front panel
            Server Endpoint URL
                opc.tcp://XPS15HPH:49580 (Auto generate when program runs)
            Item Node ID
                ns=2;s=Process Data.Temperature (Auto generate when program runs)
            Stop Button
        Run Program

    ClientWrite.vi (Write)
        Block Diagram 
            Connect.vi > While Loop [Multiple Write] > Disconnect.vi > Simple Error Handler.vi
                Top wire links (refnum) will go to the While Loop and runs to Multiple Write Node and to Disconnect.vi node
                Bottom wire links (error) will have similar connection with refnum but ends at Simple Error Handler.vi
            Server Endpoint URL (Copy over and change to control)
                Copy the indicator over from Front Panel of Server.vi and then change to control
                Connect.vi's "Server endpoint url" input will be linked to this indicator
            Security Policy 
                Right Click Connect.vi's security policy input > Create > Constant
                Message Mode:
                    None
                Security:
                    Basic256
            While Loop
                |
                | Request Node   >-----------------------------+          
                |                                              |
                |                                              V
                |                             _________________V____
                |                            | Bundle By Name |  |  |
                | Item Path                > | Node ID        |  |  | >> Build Array node >> Multiple Write.vi
                | Temperature Value        > | Value          |  |  |
                |                            |----------------|--|--|
                
                Multiple Write.vi
                    Click on bottom constant > Scalar > Double
                BundleByName 
                    Create 
                        Create "Request" Constant node first from Multiple Write (As mentioned below)
                        Right click on "Request" Constant node > Cluster > Bundle By Name
                    Item Node ID - Link to Node ID Input
                        (Copy and paste "Item Node" indicator from server) and change to control
                        Value: Process Data.Temperature  //Remove "ns=2;s="
                    Temperature (Numeric Control) - Link to Value Input
                    Request (Constant) - Top Input (Cluster Input of "Bundle By Name") - See diagram
                        Right Click on "request" input of Multiple Write.vi (As mentioned above) and then seperate the nodes
                        Node ID 
                        Value
                        Timestamp
                        Node Status
                Build Array Node
                    Right Click > Programming > Array > Build Array
                    Output will be linked to the input of Multiple Write.vi
                    Input will be linked to the output of Bundle By Name Node
                Timer Wait with Constant of 1000
                Stop Button
        Front Panel
            Server Endpoint URL (Control)
            Item Node ID (Control)
                Value: Process Data.Temperature
                Main Menu > Edit > Make Current Values Default
            Stop Button
            Temperature (Numeric Control)

    ClientRead.vi (Read)

























