//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
Labview
http://www.halvorsen.blog/documents/programming/labview/labview.php
https://www.usn.no/english/about/contact-us/employees/hans-petter-halvorsen
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
CONTENTS
01. Introduction
02. While Loops
03. Plotting
04. SubVIs
05. Case Structures
06. Formula Node
07. Arrays
08. Clusters
09. Property Nodes
10. Project Explorer
11. Debugging
12. DAQ
13. Labview and USB6008



//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
01. Introduction

    Starting
        Splash screen > File > New VI
        2 split screen Windows will open (Front panel + Block Diagram)

    Right Click on Front Panel
        Controls Selection Panel:
            Silver > Numeric, Boolean, String&Path, Arrays/Matrix, List/Tables, Graph, Ring&Enum, Decor, IO
            Modern, System, Classic, Express, Control/Simulation, .NET/ActiveX,
            SignalProcessing, Addons, UserControls,
            DSCModule, Vision

    Select Numeric Control and Paste in Front Panel
        Right Click > Numeric > Numeric
        A diagram will appear in Bloack Diagram Panel

    Right Click on Block Diagram    
        Functions Selection Panel:
            Programming > Structures, Array, Cluster, Numeric, Boolean, String, Comparison, Timing, Dialog, FileIO, Waveform, Apps, Sync, Graphics, Report
            Control/Sim, MeasurementIO, DataComms, Maths, Instruments, Vision/Motion, 
            SignalProcessing, Connectivity, Express, Addons, Favorites, UserLibs,
            DESCModules, FPGAInterface, RealTime, SQL
    
    Run the program
        Front Panel > Main Toolbar > Click on 'Run' (Arrow Icon)

    Program (without loops):
        Add in 2 Numerical Control display in Front Panel
        Add in 'Addition Operator' in Blcok Diagram Panel
            Reight Click in Block Diagram > Mathematics > Numeric > Add
        Add in Numeric Indicator in Block Front Panel
        Link everything up in BD Panel
        Click on Run in Front Panel
        Input numbers in Front Panel
        Click on Run in Block Diagram
        Calculated value will appear in Indicator
        NOTE: 
            Whenever the input changes, clicking on the Run button again is required
            Therefore, While loop needed to solve the problem
        
    Toggling between Panels
        CTRL+E

    Program (with loops):
        Cont'd
        Add while Loop
            In BD panel > Right Click > Programming > Structures > While Loop
            Draw 'While Loop' around the diagram
        Add Button to stop the program
            In Front Panel > Right Click > Silver > Boolean > Stop Button
        In Block Diagram, link Stop Button Block to the While Loop condition
        In Front Panel, Click on Run button
            Change the input parameter and the calculated value will appear in the indicator automatically
        NOTE:
            While loops are computer processing intensive since it's updating continuously
            To solve, add Timer function into the While Loop box in BD Panel
        Add Timer    
            In BD panel > Right Click > Programming > Timing > Wait(ms)
            Right Click on Input > Create > Constant
            Add "100" ms to the timer (This will update the while loop every 100 ms)

    Plotting Graph:
        Cont'd
        Add Waveform Chart
            Front Panel > Silver > Graph > Waveform Chart
            Block Diagram:
                Move Waveform Chart block into the while loop box
                Link Waveform Chart with the Add function's output
        Run and change the input parameters in Front Panel
        Notice that the Chart will plot continuously plotting the answers as the imput parameters changes


//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
02. While Loops

    Types of Loops and Structures
        While Loops (Solid line border)
        For Loops (Pages border)
        If-Else (Case Structure) - (Border with pattern)
            Nodes can be linked to the border 
            The border nodes can be connected to another area
        Sequence Structure (Film border)

    While Loop Example
        Voltage input (0-5V) from DAQ
        Converts voltage signal (Multiply by 4) to output water level height in tank
        Therefore, 25V = 100cm
        Front Panel
            Voltage
            Tank Level
            Stop while loop button
        Block Diagram   
            Voltage nodes
            multiplication node
            Tank level in cm node
            Timer node (ms)
            Stopbutton
            
        **Similar to Topic 1**
        NOTE: Just change the max Voltage input property to 25 and max output water level to 100

        Adding Numeric indicator to While Loop's Loop Iteration
            In front panel, 
                Right click > Silver > Numeric > Numeric Indicator
            In Block Diagram
                Link Numeric Indicator node to the While Loop's "i" box 
            This will show how many iterations the While Loop ran
            The Numeric indicator node can also be linked to a mathematics operator node for calculation

        While Loop border
            Connections inside the while loop can also be extended outside the while loop border
            Extend the output of the mathematics operator to the border
            A square connection node will appear (Loop Tunnel)
            An external node can be connected to the border node (Loop Tunnel)
            Add in Numeric Control block (This wont show any value when the loop is running, will show the value when the loop is stopped)
            
        Loop Tunnel
            Types of Tunnel Mode
                Last value
                Indexing
                Concatenate
            2 Ways to add external nodes
                - Normal Right click on panel and add
                - Select the Loop Tunnel > Right Click > Create >
                    Constant
                    Control
                    Indicator
            Indexing + Indicator = Array Indicator
            Array indicator
                In Front Panel, the indicator can be extended when dragged down to open up more arrays of indicators
            
        Shift Register
            Click on the While loop border and click on "Add shift register"
            Two arrow icons will appear on both sides of the border
            Arrow up icon - Output value
            Arrow down icon - Previous value
            Example
                Add in "Add Operator node" in between the the tank and multiplication node
                Link Arrow down shift reg to Add operator node
                Link Multiplication node output to Add operator node
                Extend Multiplication node output to Arrow up shift register
                Link Add operator node output to tank level indicator


//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
03. Plotting
    
    Example
        Simulate the temperature in Air Heater system. 
        The temperature in the air heater should be between 20 and 50 degree Celsius
        Use Random Generator for this Example
    Front Panel
        Waveform chart
        Low temp limit
        Upper temp limit
        Thermometer
        Stop
    Block Diagram Panel (While loop)
        Random number (0-1)
        Upper Temp Limit (UTL)
        Lower Temp Limit (LTL)
        Subtract Node (UTL - LTL)
        Multiply Node (Rand * Substract)
        Addition Node(Multiply + LTL)
        Waveform Chart (Add)
        Thermometer (Add)
        Timer (Wait - ms) - 1000ms
        Stop Button

    Features of Waveform Chart
        Renaming
            Double Click on Vertical/Horizontal axis title
            Title "Plot 0" can be changed by double clicking
        Plotting timing syncing
            The plotting of graph is totally different from the while loop timing
            To readjust plot sampling time to sync with the block diagram time, readjust the multiplier
            Right click > Scales Tab > Scaling factors > Multiplier       
            Example: 
                While loop wait time (ms): 2000ms
                Therefore, Plot multiplier: 2
        Right Click on title bar' title
            Visible Items
                Index Display
                Vertical Scrollbar
                Plot visibility checkbox
            Properties
        Right Click on title bar's icon
            Plot Visible
            Common Plots (Commonly used types of graph)
            Graph's line styling
                Color (Color of graph), Line Style (Style of graph), Line Width (Line thickness), Anti Aliased
            Graph Type Selection
                Bar Plots, Fill Base Line, Point Style, X/Y Scale
        NOTE: X=Horizontal, Y=Vertical
        Clear Chart
            Right Click > Data operation > Clear chart
        Historical Logs
            Block Diagram Panel > Right Click on Waveform Chart Node > Create > Property Node > History Data
                Place the node outside while loop border
                Right Click on History Node and select "Change All to write"
                Right Click on Input > Create > Constant = 0
                Link the History Data Node output to the While Loop border
            This will enables you to store data

    Sampling rate Timer
        Front Panel
            Numeric Control
        Block Diagram
            Numeric Control Node (Placed outside while loop) - Linked to while loop border
            Multiplier (While loop border, Constant), where the constant is 1000 since Timer is in ms and Numeric Control is in sec
            Timer - Wait (ms)
        Note: 
            Remember to change the waveform chart's multiplier for every changes made
            In order to automate the process, use the Historical Log Node
        Block Diagram
            Right Click on Waveform Chart Node > Create > Property Node > History Data
            Place the node outside while loop border
            Right Click on History Node and select "Change All to write"
            Right Click on Input > Create > Constant = 0
            Link the History Data Node output to the While Loop border
            Drag down the box to extend the array ("History")
            Right Click > Select Property > X Scale > Offset and Multiplier > Multiplier
            Link the multiplier's input to the Sampling rate timer node's  output

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
04. SubVIs

    SubVIs are the same as a function or a method used in other langugaes
    Hundreds or thousands of SubVIs are included with Labview
    SubVIs can be customized and created to your own needs
    SubVIs can be reused in other programs that uses the same operation
    Can also be used repeatedly in the same program
    Maintaining and debugging programs with SubVIs are much easier
    SubVI icons are located at the top right hand corner of Front Panel and Block Diagram Panel
    SubVIs can also appear in the form of nodes in Block Diagram Panel and be linked to other nodes


    Create Celsius to Fahrenheit converter SubVI
        Equation: T(F) = 9/5 T(C) + 32    
        Front Panel
            Add Numeric Control
            Add Numeric Indicator
        Block Diagram Panel
            Numeric Control Node
            Add Division node (Constants [9, 5])
            Add Multiply node (NumericControl, Division)
            Add Addition node (Multiply, Constant[32])
            Numeric Indicator Node (Addition)

    Converting the program into SubVI
        In front panel, at the top right hand corner, right click on the grid icon
        Select 'pattern' and choose the one with one single vertical line in the center of square
        This represents one input and one output
        The left side of the square means input. 
        The right side of the square means output
        Left click on the left side of the SubVI square and then click the numeric control to link the 2 entities
        Left click on the right side of the SubVI square and then click the numeric indicator to link the 2 entities
        Both the section of the square should turn out green which means they are connected
        Next to the pattern selection, double click on the icon image to open the property window
        This enables you to change the icon image, texts, titles or any other SubVI properties
        NOTE: In Icon Text Tab, note that the image on the right is actually a paintbrush. Cropping, drawing, adding texts can be done here
        Once complete, the new image will appear as the new icon
        Save as ConvertToFahr.vi

    Using the new SubVI
        Create a new VI
        Front Panel
            Add Vertical Fill Slide (Name this Celsius)
            Add Dial Gauge (From Numeric silver) - Name this Fahrenheit
        Block Diagram
            Right click > Select VI > Browse through the folder where ConvertToFahr.vi was stored
            Link the SubVI input to Control and SubVI output to indicator
        Double click on the SubVI to open its own front panel, CTRL+E to open the block diagram
        NOTE:
            Add while loop to the main block diagram, NOT the SubVI's block diagram
            The SubVI can also be duplicated as many times as you like according to the application
            But in order to reuse the subvi, make sure to change the memory to preallocated memory
            In SubVI Front Panel > Right Click on SubVI icon > VI Properties > Category: Execution > Reentrancy Section >
                1. Non-reentrant execution - Only one of the duplicated node can run and shares data across all duplicated nodes
                2. Shared clone reentrant execution - Sharing the memory between the duplicated SubVIs (Output will be first come first serve)
                3. Preallocated clone reentrant execution - All duplicated nodes are different from each other
            Usually select number 3 for duplicated nodes of different entity


//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
05. Case Structures

    Case Structures work like If..Else statements
    The box can be set as True/False
    Case structures are good for generating Error messages or multiple program selection
    
    Simple Case Structure (True/False) - Two cases
        Add Case Structure
            Right click in Block Diagram Panel > Programming > Structures > Case Structure
            Set as False
            On left hand side of the border, there is a connector that can be connected to external nodes
                Right click > Create Constant 
                The constant can be toggled between True/False
                Set as False
        Add Dialog    
            Right Click > Programming > Dialog Interface > One Btn Dialog
            Place this in the Case Structure box
            Dialog node Input:
                Right click > Create > Constant
                Add in "This is False"
        Change Case Structure box to True
            Add in another dialog node and set constant as "This is True"
        Optional:
            Add while loop to surround the Case structure
            Add stop button to stop while loop
            Add Wait timer and set constant to 5000ms (5sec)
        Run Program
        Explanation
            When the Input constant is True, "This is True" will pop up
            When the Input constant is False, "This is False" will pop up
        You can also add in a latching button in place of the input constant
            If button is pressed, then true. If button is off, then false
            
        Instead of using a latching button or constants to control the case structure, use numeric control instead
            Set this numeric contol data type to integer 
            Right click on node > Representation > I32
            Note that the case structure now can be toggled between 0 and 1 instead of True and False
            This can also be used for multiple case structures
            
    Case Structure with multiple cases
        Use Numeric control to toggle between multiple case structures
        Continued from the Simple Case structure above, right click on the case structure border
            Add "Case After" or "Case Before" 
        NOTE: 
            If the value of the Numeric Control doesn't cover the available case structure (ie 0,1,2), Case Structure will revert to its default (0)
            To set other pages as the default, change to the target page, right click and select "Make this the default case"
        You can also use an Enumerator to control the case structure via string instead of using the Numeric Control
            Right Click in Front Panel > Silver > Ring&Enum > Enum
            Enter a text in the input box
            To add another input, Right click > Add Item After > Add another text
            Create multiple options
            When clicked, a dropdown menu list will appear
            In Block diagram, replace numerical control with the enumerator
            Notice that in the case structure box, the name changes from integers to texts based on the enumerator
            
    Looping cases
        Create Case structure
        Create while loop around the case structure
        Add Shift register  for while loop border
            Link to the Case structure control node [?]
        Add string constant and link to while loop's shift register
            Right click > Programming > String > String constant
            Name this to 'start'
        Add stop button for while loop
        Add Wait timer for while loop and set constant to 2 sec
        Case 'Start' (Set as the default)
            Add dialog box and add constant as 'Start'
            Add String constant and name this to 'Next'
            Link string constant to right side of case structure border
            Link case structure border to right side of shift register
        Case 'Next'
            Add dialog box and add constant as 'Next'
            Add String constant and name this to 'Start'
            Link string constant to right side of case structure border
            Link case structure border to right side of shift register
        Run program
            This will toggle between start and next whenever the button is pressed

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
06. Formula Node
    
    Use C language in Labview





















