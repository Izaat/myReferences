///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
React Context and Hooks
https://www.github.com/iamshaunjp/react-context-hooks
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
CONTENTS
01. Context API and Hooks
02. Context and Provider
03. Accessing Context
04. Updating Context Data
05. Creating Multiple Contexts
06. Consuming Multiple Contexts
07. Hooks
08. useState Hook
09. useState Forms
10. useEffect Hook
11. Hooks with Context
12. Multiple Contexts with Hooks
13. Creating Context with Functional Components
14. Reading List - App Project
15. Reducers, Actions and State
16. Adding a Reducer
17. Adding Local Storage

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
01. Context API and Hooks
    
    Context API: Clean and Easy way to share state between components without having to pass props down all the time
    Hooks: Allows to do things inside functional components that can normally be done in class components (ie useStates, lifeCycleMethod)
    When being used together, Redux-like state management system can be built (Similar like how Redux behaves but without installation)
    Read: https://reactjs.org/docs/context.html
    
    Creating a react App project
        In VSCode Terminal, enter a desired folder (ie Folder ABCD)
        Type in "npx create-react-app contextapp"
        This will create a project in Folder ABCD (E:\ABCD\contextapp\)
        Enter "contextapp" folder and type in "npm start" to start
        This will open a default react app in browser
        
        Remove 
            ../src/App.test.js, 
            ../src/logo.svg, 
            ../src/App.css
        App.js
            Remove imports (ie logo and App.css)
            Remove header class
        Add "component" folder in src
            Add files
                ../src/component/Navbar.js
                ../src/component/BookList.js
    
    Navbar.js
        import React, {Component} from 'react';
        
        class Navbar extends Component {
            render() {
                return(
                    <nav>
                        <h1>Context App</h1>
                        <ul>
                            <li>Home</li>
                            <li>About</li>
                            <li>Contact</li>
                        </ul>
                    </nav>
                );
            }
        }
        export default Navbar;

    App.js
        import React from 'react';
        import Navbar from './components/Navbar';
        import BookList from './components/BookList';
        
        function App() {
            return(
                <div className="App">
                    <Navbar />
                    <BookList />
                </div>
            );
        }
        export default App;

    BookList.js
        import React, {Component} from 'react';
        
        class BookList extends Component {
            render() {
                return (
                    <div className='book-list'>
                        <ul>
                            <li>Book 1</li>
                            <li>Book 2</li>
                            <li>Book 3</li>
                        </ul>
                    </div>
                );    
            }
        }
        export default BookList;

    index.css 
        body {
            margin: 0;
            font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", "Roboto", "Oxygen",
                "Ubuntu", "Cantarell", "Fire Sans", "Droid Sans", "Helvetica Neue",
                sans-serif;
            -webkit-font-smotthing: antialiased;
            -moz-osx-font-smoothing: grayscale;
        }

        .App {
            max-width: 400px;
            margin: 30px auto;
            text-align: center;
        }
        nav{
            padding: 5px;
        }
        nav ul {
            padding: 0;
        }
        nav ul li {
            display: inline-block;
            margin: 0 10px;
        }
        .book-list {
            padding: 20px;
            margin-bottom: 20px;
        }
        .book-list ul{
            padding: 0;
            list-style-type: none;
        }
        .book-list li {
            padding: 10px;
            margin: 10px auto;
            border-radius: 10px;            
        }

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
02. Context and Provider
    Read 11 Points
    
    Files (Existing)
        src/component/Navbar.js
        src/component/BookList.js    
        src/App.js
        src/index.css

    Add another folder in src and name it "contexts"
    Add file in this folder and name it ThemeContext.js
        src/contexts/ThemeContext.js

    ThemeContext.js
        import React, {createContext, Component} from 'react';
        
        export const ThemeContext = createContext();   //01. Creates a context and store into "ThemeContext"
        
        //02. Create another class component (contains state) and the state will be shared between different components
            //Type in "cc" to for empty class component
                //class extends Component {
                //    state = {}
                //    render() {
                //        return();
                //    }
                //}
                //export default ;

        class ThemeContextProvider extends Component {
            state = {
                isLightTheme: true                                        //03. Using LightTheme or not
                //light: {syntax: '#555'}                                 //04. Dark Grey color for texts
                //light: {syntax: '#555', ui: '#ddd'}                     //05. Light grey buttons    
                light: {syntax: '#555', ui: '#ddd', bg: '#eee'}           //06. Light grey background
                dark: {syntax: '#ddd', ui: '#333', bg: '#555'}
            }
            render() {
                //return(); 
                return(                                                   //07. Creates JSX wrapper to be pushed to App.js
                    //<ThemeContext.Provider>                       
                    <ThemeContext.Provider value={{...this.state}}>       //08. Creates value property that takes data from the state
                        {this.props.children}                             //11. This refers the Navbar and Booklist in App.js
                    </ThemeContext.Provider>
                );
            }
        }
        export default ThemeContextProvider;

    App.js
        import React from 'react';
        import Navbar from './components/Navbar';
        import BookList from './components/BookList';
        import ThemeContextProvider from './contexts/ThemeContext';        //09. import to App.js
        
        function App() {
            return(
                <div className="App">
                    //<Navbar />
                    //<BookList />
                    <ThemeContextProvider>                                 //10. Adds the wrapper. Navbar and BookList will be attached to props
                        <Navbar />
                        <BookList />
                    </ThemeContextProvider>
                </div>
            );
        }
        export default App;

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
03. Accessing Context

    Files (Existing)
        src/component/Navbar.js
        src/component/BookList.js    
        src/App.js (From Topic 2)
        src/index.css
        src/contexts/ThemeContext.js (From Topic 2)












