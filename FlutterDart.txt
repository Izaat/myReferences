import 'dart:io'; //something like iostream

NOTE: everything in dart is object, the sub of class
Run dart file by typing in "dart filename.dart" in the console

///////////////////////////////////////////////////////////////////////////////////////////////////////////
//CONTENTS//
01. ORIENTATE VIRTUAL PHONE TO LANDSCAPE
02. OUTPUT, STRINGS AND PRINTING
03. COMMENTING
04. DECLARATIONS
05. MULTILINE STRINGS
06. CONVERTING STRING TO INTEGER AND BACK
07. DEFINING A CONSTANT
08. STANDARD OPERATORS
09. SHORTCUT
10. ADD AND REMOVE FROM ARRAY
11. CLASSES
12. CLASSES WITH PRIVATE INSTANCE / SECURITY
13. CLASS INHERITENCE
14. NULL AWARE OPERATOR - ?. , ?? , ??=
15. TERNARY OPERATOR  
16. TYPE TEST OPERATOR
17. CONDITIONAL STATEMENT
18. LOOP STATEMENT


01 ///////////////////////////////////////////////////////////////////////////////////////////////////////////
//ORIENTATE VIRTUAL PHONE TO LANDSCAPE
//main.dart//
void main(){
    SystemChrome.setPreferredOrientations([DeviceOrientation.landscapeLeft]); //You can use .landscapeRight doesnt matter
}

02 ///////////////////////////////////////////////////////////////////////////////////////////////////////////
//OUTPUT, STRINGS AND PRINTING
main(){
    stdout.writeIn('What is your name: ');
    String name = stdin.readLineSync(); //box to type in your name
    print('My name is $name'); //Outputs my name is whatever
}

03 ///////////////////////////////////////////////////////////////////////////////////////////////////////////
//COMMENTING
//In-line comment
/*Block comment*/
///Documentation


04 ///////////////////////////////////////////////////////////////////////////////////////////////////////////
//DECLARATIONS
Strongly type Programming Lang. Variable is known at compile time. (C++, Java, Swift)
Dynamic type programming Lang. Variable is know at run time. (Python, Ruby, Javascript)

//strongly type//
int, double, string, bool. //var can be any of these 4 declarations
//Dynamic type//
dynamic


//calling the variables is similar to PHP $variable


05 ///////////////////////////////////////////////////////////////////////////////////////////////////////////
//MULTILINE STRINGS
    main(){
        var s2 = """This is also
        multiline-sting.""";
        print(s2);
    } //Outputs the multiline. Shortcut to writing a string without using <br>


06 ///////////////////////////////////////////////////////////////////////////////////////////////////////////
//CONVERTING STRING TO INTEGER AND BACK
    main(){
        var one = int.parse('1');
        assert(one == 1); //String to Int
        
        var oneDotOne = double.parse('1.1');
        assert(oneDotOne == 1); //String to double
        NOTE: cannot convert letters andwords into int or double
        
        String oneAsString = 1.toString();
        assert(oneAsString == '1'); //int to string
        
        String piAsString = 3.14.toStringAsFixed(2); //'2' means 2 floating point number or 2 decimal places
        assert(piAsString == '3.14'); //double to String
        
    }



07 ///////////////////////////////////////////////////////////////////////////////////////////////////////////
//DEFINING A CONST
    main(){
        const aConstNum = 0; // int constant
        const aConstBool = true; //bool constant
        const aConstString = 'hello'; //string constant
        
        print(aConstNum); //output 0
        print(aConstBool); //output true
        print(aConstString); //output hello
        
        print(aConstNum.runtimeType); //output int
        print(aConstBool.runtimeType); //output bool
        print(aConstString.runtimeType); //output string
        
        //runtimeType is compile during runtime
    }


08 ///////////////////////////////////////////////////////////////////////////////////////////////////////////
//STANDARD OPERATORS
    void main() {
        int num = 10 + 22;
        num = num - 2;
        
        print(num);
        
        num = num % 5; //remainder
        print(num);    
        
        //relational 
        num (num == 0) {    // ==, !=, >=, <=
            print('Zero');
        }
        
        num = 100;
        num *= 2;       //shortcut 100*2
        print(num);

        //unary operator
        ++num; //pre-increment
        num++; //post-increment
        num += 1; //similar to ++
        num -= 1; //similar to --
        print(num);
        
        //logical && and logical ||
        if (num > 200 && num < 203){
            print('200 to 202');
        }
        
    }


09 ///////////////////////////////////////////////////////////////////////////////////////////////////////////
//SHORTCUT
    void main(){
        String greet = greeting();
        print(greet);
    }
    
    //instead of doing this
    String greeting(){
        return 'hello';
    }
    
    //do this instead
    String greeting() => 'hello';


10 ///////////////////////////////////////////////////////////////////////////////////////////////////////////
//ADD AND REMOVE FROM ARRAY
    void main(){
        List <String> names = ['one', 'two', 'three'];      //adding "<String>"  disables any other datatype like numbers to enter into the array
        
        names.add('four');          //output ['one', 'two', 'three', 'four']
        names.remove('five');   //output ['two', 'three', 'four']
        
        print(names);

    }

11 ///////////////////////////////////////////////////////////////////////////////////////////////////////////
//CLASSES
    void main(){
        User userOne = User();
        print(userOne.name);       //output mario
        print(userOne.Age);         //output 25
        userOne.login();               //output user login    
        
    }

    class User {
        String username = 'mario';
        int age = 25;
           
        void login(){
            print ('user logged in');
        }
    }


12 ///////////////////////////////////////////////////////////////////////////////////////////////////////////
//CLASSES WITH PRIVATE INSTANCE / SECURITY
    void main(){
        User userOne = User('luigi', 25);
        print(userOne.username);      //Output luigi
        
        User userTwo = User('mario', 30);
        print(userTwo.username);  //Output mario
        
    }

    class User {
        String username = 'mario';
        int age = 25;
        
        User(String username, int age){
            this.username = username;       // ... = username is the variable from the bracket User(String username, ...)
            this.age = age;
        }
        
    }


13 ///////////////////////////////////////////////////////////////////////////////////////////////////////////
//CLASS INHERITENCE
    void main(){
        User userOne = User('luigi', 25);
        print(userOne.username);      //Output luigi
        
        User userTwo = User('mario', 30);
        print(userTwo.username);  //Output mario
        
        SuperUser userThree = SuperUser('yoshi', 20);
        print(userThree.username);  //output yoshi
        userThree.publish();        //output published update
        
    }

    class User {
        String username = 'mario';
        int age = 25;
        
        User(String username, int age){
            this.username = username;       // ... = username is the variable from the bracket User(String username, ...)
            this.age = age;
        }
        
    }
    
    class SuperUser extends User{
        SuperUser(String username, int age) : super(username, age)   //assigning zero argument constructor to the superclass
                                                                                                            //this modifies the value of the variable in User()
        //
        void publish() {
            print('published update');
        }
    }


14 ///////////////////////////////////////////////////////////////////////////////////////////////////////////
//NULL AWARE OPERATOR
    //(?.)
    If the variable/function is not defined, then output 'null'. 
    If contains value, then proceed
    Usually it'll output error messages if variable is not defined
        
        class Num {
            int num = 10;
        }   
        main() {
            var n = Num();
            int number;
            if (n != null){     // the entire if-function can be replaced with: number = n?.num;
                number = n.num;
            }      
            print(number); //Output 10 if everything is defined, 'null' if 'Num()' being removed from 'var n'
        }

    // (??)
    If the variable/function is not defined, this will output a value instead of null shown ablove
    Instead of,
        number = n?.num; //outputs value 'null' if 'Num()' being removed from 'var n'
    We use this,
        number = n?.num ?? 0;   //outputs value '0' if 'Num()' being removed from 'var n'


    //(??=)
    This statement adds in a default value the variable if the variable has no value in it
    This avoids program to crash if there is no value assigned to the variable.
    
        main(){
            int number;
            print(number ??= 100);
        }
        
    Output: value will be 100


15 ///////////////////////////////////////////////////////////////////////////////////////////////////////////
//TERNARY OPERATOR

    void main() {
        int x = 100;
        var result = x % 2 == 0 ? 'Even' : 'Odd';       //100 divide by 2, //if remainder is 0, print even. If remainder is not 0, print odd
        print(result);
    }


16 ///////////////////////////////////////////////////////////////////////////////////////////////////////////
//TYPE TEST OPERATOR
    void main(){
        var x = 100;
        if (x is int){
            print('integer'); //prints integer if x = 100, but if x = 100.00, it wont print integer as the variable is not defined as 'int'
        }
    }


17 ///////////////////////////////////////////////////////////////////////////////////////////////////////////
//CONDITIONAL STATEMENT
    IF Statement
        void main() {
            int number = 100;
            
            if (number % 2 == 0) {
                print('Even');
            }
            else if (number % 3 == 0) {
                print('Odd');
            }
            else {
                print('Confused');
            }
        }
    
    SWITCH STATEMENT
        void main() {
            int number = 0;
            
            switch(number) {
                case 0:
                    print('Even');
                    break;
                case 1:
                    print('Odd');
                    break;
                default:
                    print('Confused');    
            }
        }


18 ///////////////////////////////////////////////////////////////////////////////////////////////////////////
//LOOP STATEMENT
    FOR
        void main () {
            for (var i = 1; i <= 10; ++i) {
                print(i);
            }
        }

    FOR-IN
        void main () {
            var numbers = [1,2,3];
            
            for (var n in numbers) {
                print(n);
            }
            
            for (var i = 0; i< numbers.length; ++i) {
                print(numbers[i]);
            }
            
        }
        
    FOR-EACH
        void main() {
            var numbers = [1, 2, 3];
            
            numbers.forEach( (n) => print(n) );
        }

    WHILE
        void main() {
            int num = 5;
            while (num > 0){    //Also see 'do' loop
                print(num);
                num -= 1;
            }
        } //prints out 5,4,3,2,1









































