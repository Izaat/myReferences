//////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//WooCommerce RestAPI
    //../lib/config.dart//////////////////////
        class Config {
            static String key = "";
            static String sceret = ""; //note the spelling
            static String url = "https://youwebsite.com/wp-json/wc/v3/";    //URL where the file resides
            static String customerURL = "";
        }
        
    //../lib/api_service.dart/////////////////
        import 'package:dio/dio.dart';
        import 'package:woocommerce_app/models/customer.dart';
        import 'config.dart'; 
               
        class APIService {
            Future<bool> createCustomer(CustomerModel model) async {
                var authToken = base64.encode(
                    utf8.encode(Config.key + ";" + Config.sceret)
                );
                
                bool ret = false;
                try {
                    var response = await Dio().post(
                        Config.url + Config.customerURL,
                        data: model.toJson(),
                        options: new Options(
                            headers: {
                                HttpHeaders.authorizationHeader: 'Basic $authToken',
                                HttpHeaders.contentTypeHeader: "application/json"
                            }
                        )
                    );
                    
                    if (response.statusCode == 201) {
                        ret = true;
                    }                
                } 
                
                on DioError catch (e) {
                    if(e.response.statusCode == 404) {       //duplicated username
                        ret = false;
                    }
                    else {
                        ret = false;
                    }
                }
                return ret;
                
            } //Future
        } //Class

    //../lib/models/customer.dart/////////////////////////////////////////////////////////
        class CustomerModel {
            String email;
            String firstName;
            String lastName;
            String password;

            CustomerModel({
                this.email,
                this.firstName,
                this.lastName,
                this.password,
            });//CustomerModel

            Map <String, dynamic> toJson(){
                Map <String, dynamic> map = {};
                map.addAll({
                    'email': email,
                    'first_name': firstName,
                    'last_name': lastName,
                    'password': password,
                    'username': email
                });//Map
                return map;
            }//Map
        }//class CustomerModel

    //../lib/utils/form_helper.dart/////////////////////////////////////////////////////////////
        import 'package:flutter/material.dart';
        
        class FormHelper {
            static Widget textInput(                                            //Widget textInput () {}
                BuildContext context,
                Object initialValue,
                Function onChanged, {
                    bool isTextArea = false,
                    bool isNumberInput = false,
                    obscureText: false,
                    Function onValidate,
                    Widget prefixIcon,
                    Widget suffixIcon,
                } //onChanged
            ) {
                return TextFormField(
                    initialValue: initialValue != null ? initialValue.toString() : "",
                    decoration: fieldDecoration(
                        context,
                        "",
                        "",
                        suffixIcon: suffixIcon,
                    ),
                    obscureText: obscureText,
                    maxLines: !isTextArea ? 1 : 3,
                    keyboardType: isNumberInput ? TextInputType.number : TextInputType.text,
                    onChanged: (String value) {
                        return onChanged(value);
                    }
                    validator: (value) {
                        return onValidate(value);
                    }
                ) //TextFormField
            } //Widget textinput
        

            static InputDecoration fieldDecoration(                   //InputDecoration fieldDecoration () {}
                BuildContext context,
                String hintText,
                String helperText, {
                    Widget prefixIcon,
                    Widget suffixIcon,
                }
            ) {
                return InputDecoration (
                    contentPadding: EdgeInsets.all(6),
                    hintText: hintText,
                    helperText: helperText,
                    prefixIcon: prefixIcon,
                    suffixIcon: suffixIcon,
                    enabledBorder: OutlineInputBorder(
                        borderSide: BorderSide(
                            color: Theme.of(context).primaryColor,
                            width: 1,                        
                        ), //BorderSide
                    ), //OutlineInputBorder
                    border: OutlineInputBorder (
                        borderSide: BorderSide (
                            color: Theme.of(context).primaryColor,
                            width: 1,
                        ), //BorderSide
                    ), //OutlineInputBorder 
                ); //InputDecoration
            } //fieldDecoration

           static Widget fieldLabel(String labelName){
                return new Padding(
                    padding: EdgeInsets.fromLRTB(0, 5, 0, 10),
                    child: Text(
                        labelName,
                        style: new TextStyle(
                            fontWeight: FontWeight.bold,
                        )
                    ),  //Text                  
                ); //Padding
           } 

            static Widget saveButton(String buttonText, Function onTap, {String color, String textColor, bool fullWidth}) {
                return Container(
                    height: 50.0,
                    width: 150,
                    child: GestureDetector(
                        onTap: () {
                            onTap();
                        };
                        
                        child: Container (
                            decoration: BoxDecoration (
                                border: Border.all (
                                    color: Colors.redAccent,
                                    style: BorderStyle.solid,
                                    width: 1.0,
                                ), //Border.all
                                color: Colors.redAccent,
                                borderRadius: BorderRadius.circular(30.0),                        
                            ), //BoxDecoration
                            child: Row(
                                mainAxisAlignment: MainAxisAlignment.center,
                                children: <Widget> [
                                    Center(
                                        child: Text(
                                            buttonText,
                                            style: TextStyle(
                                                color: Colors.white,
                                                fontSize: 16,
                                                fontWeight: fontWeight.w600,
                                                letterSpacing:1,
                                            ), //TextStyle
                                        ), //Text
                                    ), //Center
                                ], //<Widget>[]
                            ), //Row                    
                        ), //Container           
                    ), //GestureDetector
                );  //Container          
            } //SaveButton

            static void showMessage(
                BuildContext context,
                String title,
                String message,
                String buttonText,
                Function onPressed,
            ) {
                showDialog(
                    context: context,
                    builder: (BuildContext context) {
                        return AlertDialog(
                            title: newText(message),
                            actions: [
                                new FlatButton(
                                    onPressed: () {
                                        return onPressed();
                                    },
                                    child: new Text(buttonText),                                
                                ) //FlatButton
                            ],
                        ); //AlertDialog
                    },
                );
            } //ShowMessage(){}
        } //ClassFormHelper
